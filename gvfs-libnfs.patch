--- gvfs-1.56.1/daemon/gvfsbackendnfs.c.orig	2025-07-22 18:10:13.275258131 +0200
+++ gvfs-1.56.1/daemon/gvfsbackendnfs.c	2025-07-22 18:10:19.281962029 +0200
@@ -427,7 +427,7 @@ try_read (GVfsBackend *backend,
   GVfsBackendNfs *op_backend = G_VFS_BACKEND_NFS (backend);
   struct nfsfh *fh = _handle;
 
-  nfs_read_async (op_backend->ctx, fh, bytes_requested, read_cb, job);
+  nfs_read_async (op_backend->ctx, fh, buffer, bytes_requested, read_cb, job);
   return TRUE;
 }
 
@@ -755,7 +755,7 @@ try_append_to (GVfsBackend *backend,
 {
   GVfsBackendNfs *op_backend = G_VFS_BACKEND_NFS (backend);
 
-  nfs_create_async (op_backend->ctx,
+  nfs_open2_async (op_backend->ctx,
                     filename,
                     O_APPEND,
                     (flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
@@ -805,7 +805,7 @@ copy_write_cb (int err,
   CopyHandle *handle = private_data;
 
   if (err > 0)
-    nfs_read_async (ctx, handle->srcfh, COPY_BLKSIZE, copy_read_cb, handle);
+    nfs_read_async (ctx, handle->srcfh, data, COPY_BLKSIZE, copy_read_cb, handle);
   else
     copy_handle_complete (ctx, handle, FALSE);
 }
@@ -818,7 +818,7 @@ copy_read_cb (int err, struct nfs_contex
   if (err == 0)
     copy_handle_complete (ctx, handle, TRUE);
   else if (err > 0)
-    nfs_write_async (ctx, handle->destfh, err, data, copy_write_cb, handle);
+    nfs_write_async (ctx, handle->destfh, data, err, copy_write_cb, handle);
   else
     copy_handle_complete (ctx, handle, FALSE);
 }
@@ -834,7 +834,7 @@ copy_open_dest_cb (int err,
     {
       handle->destfh = data;
 
-      nfs_read_async (ctx, handle->srcfh, COPY_BLKSIZE, copy_read_cb, handle);
+      nfs_read_async (ctx, handle->srcfh, data, COPY_BLKSIZE, copy_read_cb, handle);
     }
   else
     {
@@ -852,8 +852,8 @@ copy_open_source_cb (int err,
   if (err == 0)
     {
       handle->srcfh = data;
-      nfs_create_async (ctx,
-                        handle->dest, O_TRUNC, handle->mode & 0777,
+      nfs_creat_async (ctx,
+                        handle->dest, handle->mode & 0777,
                         copy_open_dest_cb, handle);
       g_free (handle->dest);
     }
@@ -935,9 +935,8 @@ replace_backup_chown_cb (int err,
       GVfsJobOpenForWrite *op_job = G_VFS_JOB_OPEN_FOR_WRITE (job);
       GVfsBackendNfs *op_backend = G_VFS_BACKEND_NFS (op_job->backend);
 
-      nfs_create_async (op_backend->ctx,
+      nfs_creat_async (op_backend->ctx,
                         op_job->filename,
-                        O_TRUNC,
                         (op_job->flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
                         replace_trunc_cb, handle);
     }
@@ -1019,9 +1018,8 @@ replace_truncate (struct nfs_context *ct
     }
   else
     {
-      nfs_create_async (ctx,
+      nfs_creat_async (ctx,
                         op_job->filename,
-                        O_TRUNC,
                         (op_job->flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
                         replace_trunc_cb, handle);
     }
@@ -1211,9 +1209,8 @@ replace_stat_cb (int err,
               handle->tempname = g_build_filename (dirname, basename, NULL);
               g_free (dirname);
 
-              nfs_create_async (ctx,
+              nfs_creat_async (ctx,
                                 handle->tempname,
-                                O_EXCL,
                                 (op_job->flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
                                 replace_temp_cb, handle);
             }
@@ -1299,9 +1296,8 @@ try_replace (GVfsBackend *backend,
 {
   GVfsBackendNfs *op_backend = G_VFS_BACKEND_NFS (backend);
 
-  nfs_create_async (op_backend->ctx,
+  nfs_creat_async (op_backend->ctx,
                     filename,
-                    O_EXCL,
                     (flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
                     replace_create_cb, job);
   return TRUE;
@@ -1337,9 +1333,8 @@ try_create (GVfsBackend *backend,
 {
   GVfsBackendNfs *op_backend = G_VFS_BACKEND_NFS (backend);
 
-  nfs_create_async (op_backend->ctx,
+  nfs_creat_async (op_backend->ctx,
                     filename,
-                    O_EXCL,
                     (flags & G_FILE_CREATE_PRIVATE ? 0600 : 0666) & ~op_backend->umask,
                     create_cb, job);
   return TRUE;
@@ -1372,7 +1367,7 @@ try_write (GVfsBackend *backend,
   WriteHandle *handle = _handle;
   struct nfsfh *fh = handle->fh;
 
-  nfs_write_async (op_backend->ctx, fh, buffer_size, buffer, write_cb, job);
+  nfs_write_async (op_backend->ctx, fh, buffer, buffer_size, write_cb, job);
   return TRUE;
 }
 
